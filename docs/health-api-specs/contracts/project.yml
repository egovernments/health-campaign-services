openapi: 3.0.1
info:
  title: Project Management System
  version: v1.6
  contact:
    name: egovernments foundation
    email: info@egovernments.org
servers:
  - url: https://unified-dev.digit.org
    description: Development server url

paths:
  /project/v1/_create:
    post:
      tags:
        - Project
      summary:  Create a new Project
      description:  Create a new Project
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  /project/v1/_update:
    post:
      tags:
        - Project
      summary: Update the details of a existing Project
      description: Updates the details of an existing project and returns the updated project details.
      operationId: updateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  /project/v1/_search:
    post:
      tags:
        - Project
      summary: Search for existing project
      description: Searches for projects based on criteria.
      operationId: searchProject
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
        - name: offset
          in: query
          required: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: tenantId
          in: query
          required: true
          schema:
            type: string
        - name: lastChangedSince
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: includeDeleted
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: includeAncestors
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: includeDescendants
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: createdFrom
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createdTo
          in: query
          required: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  /project/v2/_search:
    post:
      tags:
        - Project
      summary: Search for existing project (v2)
      description: Searches for projects based on detailed criteria and returns the matching projects along with the total count.
      operationId: searchV2Project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urlParams:
                  $ref: '#/components/schemas/ProjectSearchURLParams'
                projectSearchRequest:
                  $ref: '#/components/schemas/ProjectSearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  /project/task/v1/_create:
    post:
      tags:
        - Project Task
      summary: Create task for the project
      description: Creates a new task for a project.
      operationId: projectTaskV1CreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /project/task/v1/bulk/_create:
    post:
      tags:
        - Project Task
      summary:  Create tasks for the project in bulk
      description: Creates multiple tasks in bulk.
      operationId: projectTaskBulkV1CreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo' 
  /project/task/v1/_update:
    post:
      tags:
        - Project Task
      summary: Update a task
      description: Updates details of an existing task.
      operationId: projectTaskV1UpdatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /project/task/v1/bulk/_update:
    post:
      tags:
        - Project Task
      summary: Bulk update tasks
      description: Updates multiple tasks in bulk.
      operationId: projectTaskV1BulkUpdatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/task/v1/_delete:
    post:
      tags:
        - Project Task
      summary: Soft delete Task for a project
      description: Deletes a task from a project.
      operationId: projectTaskV1DeletePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /project/task/v1/bulk/_delete:
    post:
      tags:
        - Project Task
      summary: Soft delete Tasks for a project
      description: Deletes multiple tasks in bulk.
      operationId: projectTaskV1BulkDeletePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/task/v1/_search:
    post:
      tags:
        - Project Task
      summary: Search task for Project
      description: Searches for tasks based on criteria.
      operationId: projectTaskV1SearchPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urlParams:
                  $ref: '#/components/schemas/URLParams'
                taskSearchRequest:
                  $ref: '#/components/schemas/TaskSearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskBulkResponse'

  /project/staff/v1/_create:
    post:
      tags:
        - Project Staff
      summary: Link Staff users to Project for a certain time period
      description: Creates a new linkage between a project and staff user.
      operationId: projectStaffV1CreatePost_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStaffRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectStaffResponse'
  /project/staff/v1/bulk/_create:
    post:
      tags:
        - Project Staff
      summary: Link bulk Staff users to Project for a certain time period
      description: Creates multiple staff linkages in bulk.
      operationId: projectStaffV1CreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStaffBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/staff/v1/_update:
    post:
      tags:
        - Project Staff
      summary: Update Project Staff users
      description: Updates a single staff linkage record.
      operationId: projectStaffV1UpdatePost_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStaffRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectStaffResponse'
  /project/staff/v1/bulk/_update:
    post:
      tags:
        - Project Staff
      summary: Update Project Staff users using bulk payload
      description: Updates multiple staff linkage records in bulk.
      operationId: projectStaffV1UpdatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStaffBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/staff/v1/_delete:
    post:
      tags:
        - Project Staff
      summary: Soft delete linkage of Project Staff users with project
      description: Deletes a staff record from a project.
      operationId: projectStaffV1DeletePost_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStaffRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectStaffResponse'
  /project/staff/v1/bulk/_delete:
    post:
      tags:
        - Project Staff
      summary: Soft delete linkage of Project Staff users with project in bulk
      description: Deletes staff records in bulk.
      operationId: projectStaffV1DeletePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStaffBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/staff/v1/_search:
    post:
      tags:
        - Project Staff
      summary: Search Project Staff users
      description: Searches for staff records based on criteria.
      operationId: projectStaffV1SearchPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urlParams:
                  $ref: '#/components/schemas/URLParams'
                projectStaffSearchRequest:
                  $ref: '#/components/schemas/ProjectStaffSearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectStaffBulkResponse'
  /project/facility/v1/_create:
    post:
      tags:
        - Project Facility
      summary: Link Facility to Project
      description: Creates a linkage between a project and facility.
      operationId: projectFacilityV1CreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFacilityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFacilityResponse'
  /project/facility/v1/bulk/_create:
    post:
      tags:
        - Project Facility
      summary: Link Facilities to Project
      description: Creates multiple facility linkages in bulk.
      operationId: projectFacilityV1BulkCreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFacilityBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/facility/v1/_update:
    post:
      tags:
        - Project Facility
      summary: Update Project Facilities
      description: Updates a single facility linkage record.
      operationId: projectFacilityV1UpdatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFacilityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFacilityResponse'
  /project/facility/v1/bulk/_update:
    post:
      tags:
        - Project Facility
      summary: Bulk update Project Facilities
      description: Updates multiple facility linkage records in bulk.
      operationId: projectFacilityV1BulkUpdatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFacilityBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/facility/v1/_delete:
    post:
      tags:
        - Project Facility
      summary: Soft delete Project Facility
      description: Deletes a facility record from a project.
      operationId: projectFacilityV1DeletePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFacilityRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFacilityResponse'
  /project/facility/v1/bulk/_delete:
    post:
      tags:
        - Project Facility
      summary: Soft delete Project Facilities in bulk
      description: Deletes facility records in bulk.
      operationId: projectFacilityV1BulkDeletePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFacilityBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/facility/v1/_search:
    post:
      tags:
        - Project Facility
      summary: Search Project Facilities
      description: Searches for facility records based on criteria.
      operationId: projectFacilityV2SearchPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urlParams:
                  $ref: '#/components/schemas/URLParams'
                projectFacilitySearchRequest:
                  $ref: '#/components/schemas/ProjectFacilitySearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFacilityBulkResponse'
  /project/beneficiary/v1/_create:
    post:
      tags:
        - Project Beneficiary
      summary: Add beneficiary for project
      description: Creates a new project beneficiary and returns the created beneficiary details.
      operationId: projectBeneficiaryV1CreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeneficiaryResponse'
  /project/beneficiary/v1/bulk/_create:
    post:
      tags:
        - Project Beneficiary
      summary: Add beneficiaries for project
      description: Creates multiple beneficiaries in bulk.
      operationId: projectBeneficiaryV1BulkCreatePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/beneficiary/v1/_update:
    post:
      tags:
        - Project Beneficiary
      summary: Update beneficiary registration for project
      description: Updates a single beneficiary.
      operationId: projectBeneficiaryV1UpdatePost
      parameters:
        - name: echoResource
          in: query
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeneficiaryResponse'
  /project/beneficiary/v1/bulk/_update:
    post:
      tags:
        - Project Beneficiary
      summary: Update beneficiaries registration for project
      description: Updates multiple beneficiaries in bulk.
      operationId: projectBeneficiaryV1BulkUpdatePost
      parameters:
        - name: echoResource
          in: query
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/beneficiary/v1/_delete:
    post:
      tags:
        - Project Beneficiary
      summary: Soft delete beneficiary registration for project
      description: Deletes a single beneficiary
      operationId: projectBeneficiaryV1DeletePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeneficiaryResponse'
  /project/beneficiary/v1/bulk/_delete:
    post:
      tags:
        - Project Beneficiary
      summary:  Soft delete beneficiary registrations for project 
      description: Deletes beneficiaries in bulk.
      operationId: projectBeneficiaryV1BulkDeletePost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeneficiaryBulkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseInfo'
  /project/beneficiary/v1/_search:
    post:
      tags:
        - Project Beneficiary
      summary: Search beneficiary registration for Project
      description: Searches for beneficiaries based on criteria.
      operationId: projectBeneficiaryV2SearchPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                urlParams:
                  $ref: '#/components/schemas/URLParams'
                beneficiarySearchRequest:
                  $ref: '#/components/schemas/BeneficiarySearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeneficiaryBulkResponse'

components:
  schemas:
    ProjectSearchURLParams:
      required:
        - limit
        - offset
        - tenantId
      type: object
      properties:
        urlparams:
          $ref: '#/components/schemas/URLParams'
        limit:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
        offset:
          minimum: 0
          type: integer
          format: int32
        tenantId:
          type: string
        lastChangedSince:
          type: integer
          format: int64
        includeDeleted:
          type: boolean
        includeAncestors:
          type: boolean
        includeDescendants:
          type: boolean
        createdFrom:
          type: integer
          format: int64
        createdTo:
          type: integer
          format: int64
    URLParams:
      required:
        - limit
        - offset
        - tenantId
      type: object
      properties:
        limit:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
        offset:
          minimum: 0
          type: integer
          format: int32
        tenantId:
          type: string
        lastChangedSince:
          type: integer
          format: int64
        includeDeleted:
          type: boolean
    PlainAccessRequest:
      type: object
      properties:
        recordId:
          type: string
        plainRequestFields:
          type: array
          items:
            type: string
    ProjectSearch:
      type: object
      properties:
        urlparams:
          $ref: '#/components/schemas/ProjectSearchURLParams'
        id:
          type: array
          items:
            type: string
        startDate:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
        isTaskEnabled:
          type: boolean
        parent:
          maxLength: 64
          minLength: 2
          type: string
        projectTypeId:
          type: string
        subProjectTypeId:
          type: string
        department:
          maxLength: 64
          minLength: 2
          type: string
        referenceId:
          maxLength: 100
          minLength: 2
          type: string
        boundaryCode:
          type: string
        includeAncestors:
          type: boolean
        includeDescendants:
          type: boolean
        createdFrom:
          type: integer
          format: int64
        createdTo:
          type: integer
          format: int64
        name:
          type: string
    ProjectSearchRequest:
      required:
        - Project
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        Project:
          $ref: '#/components/schemas/ProjectSearch'
    RequestInfo:
      type: object
      properties:
        apiId:
          type: string
        ver:
          type: string
        ts:
          type: integer
          format: int64
        action:
          type: string
        did:
          type: string
        key:
          type: string
        msgId:
          type: string
        authToken:
          type: string
        correlationId:
          type: string
        plainAccessRequest:
          $ref: '#/components/schemas/PlainAccessRequest'
        userInfo:
          $ref: '#/components/schemas/User'
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
        tenantId:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        name:
          type: string
        type:
          type: string
        mobileNumber:
          type: string
        emailId:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        tenantId:
          type: string
        uuid:
          type: string
    Address:
      required:
        - type
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
        tenantId:
          type: string
        clientReferenceId:
          maxLength: 64
          minLength: 2
          type: string
        doorNo:
          maxLength: 64
          minLength: 2
          type: string
        latitude:
          maximum: 90
          exclusiveMaximum: false
          minimum: -90
          exclusiveMinimum: false
          type: number
          format: double
        longitude:
          maximum: 180
          exclusiveMaximum: false
          minimum: -180
          exclusiveMinimum: false
          type: number
          format: double
        locationAccuracy:
          minimum: 0
          exclusiveMinimum: false
          type: number
          format: double
        type:
          type: string
          enum:
            - PERMANENT
            - CORRESPONDENCE
            - OTHER
        addressLine1:
          maxLength: 256
          minLength: 2
          type: string
        addressLine2:
          maxLength: 256
          minLength: 2
          type: string
        landmark:
          maxLength: 256
          minLength: 2
          type: string
        city:
          maxLength: 256
          minLength: 2
          type: string
        pincode:
          maxLength: 64
          minLength: 2
          type: string
        buildingName:
          maxLength: 256
          minLength: 2
          type: string
        street:
          maxLength: 256
          minLength: 2
          type: string
        boundaryType:
          type: string
        boundary:
          type: string
        locality:
          $ref: '#/components/schemas/Boundary'
    AuditDetails:
      type: object
      properties:
        createdBy:
          type: string
        lastModifiedBy:
          type: string
        createdTime:
          type: integer
          format: int64
        lastModifiedTime:
          type: integer
          format: int64
    Boundary:
      required:
        - code
      type: object
      properties:
        id:
          type: string
        tenantId:
          type: string
        code:
          type: string
        geometry:
          $ref: '#/components/schemas/JsonNode'
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        additionalDetails:
          $ref: '#/components/schemas/JsonNode'
    Document:
      required:
        - documentType
        - fileStoreId
        - tenantId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
        tenantId:
          maxLength: 128
          minLength: 2
          type: string
        documentType:
          maxLength: 64
          minLength: 2
          type: string
        fileStoreId:
          maxLength: 64
          minLength: 2
          type: string
        documentUid:
          maxLength: 64
          minLength: 2
          type: string
        fileStore:
          type: string
        status:
          type: string
        additionalDetails:
          type: object
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
    JsonNode:
      type: object
    Project:
      type: object
      properties:
        id:
          type: string
        tenantId:
          type: string
        projectNumber:
          type: string
        name:
          type: string
        projectType:
          type: string
        projectSubType:
          type: string
        department:
          type: string
        description:
          type: string
        referenceID:
          type: string
        projectTypeId:
          type: string
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        address:
          $ref: '#/components/schemas/Address'
        startDate:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
        isTaskEnabled:
          type: boolean
        parent:
          type: string
        projectHierarchy:
          type: string
        natureOfWork:
          type: string
        ancestors:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        descendants:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        targets:
          type: array
          items:
            $ref: '#/components/schemas/Target'
        additionalDetails:
          type: object
        isDeleted:
          type: boolean
        rowVersion:
          type: integer
          format: int32
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
    ProjectResponse:
      required:
        - Project
        - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        Project:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        TotalCount:
          type: integer
          format: int32
    ResponseInfo:
      type: object
      properties:
        apiId:
          type: string
        ver:
          type: string
        ts:
          type: integer
          format: int64
        resMsgId:
          type: string
        msgId:
          type: string
        status:
          type: string
    Target:
      type: object
      properties:
        id:
          type: string
        beneficiaryType:
          type: string
        totalNo:
          type: integer
          format: int32
        targetNo:
          type: integer
          format: int32
        isDeleted:
          type: boolean
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
    ProjectRequest:
      required:
        - Projects
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        Projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        isCascadingProjectDateUpdate:
          type: boolean
        apiOperation:
          type: string
          enum:
            - CREATE
            - UPDATE
            - DELETE
    AdditionalFields:
      type: object
      properties:
        schema:
          maxLength: 64
          minLength: 2
          type: string
        version:
          minimum: 1
          type: integer
          format: int32
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    Field:
      required:
        - key
        - value
      type: object
      properties:
        key:
          maxLength: 64
          minLength: 2
          type: string
        value:
          maxLength: 10000
          minLength: 1
          type: string
    Task:
      required:
        - projectId
        - status
        - tenantId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
        tenantId:
          maxLength: 1000
          minLength: 2
          type: string
        source:
          type: string
        rowVersion:
          type: integer
          format: int32
        applicationId:
          type: string
        hasErrors:
          type: boolean
        additionalFields:
          $ref: '#/components/schemas/AdditionalFields'
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        clientReferenceId:
          maxLength: 64
          minLength: 2
          type: string
        clientAuditDetails:
          $ref: '#/components/schemas/AuditDetails'
        projectId:
          maxLength: 64
          minLength: 2
          type: string
        projectBeneficiaryId:
          maxLength: 64
          minLength: 2
          type: string
        projectBeneficiaryClientReferenceId:
          maxLength: 64
          minLength: 2
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/TaskResource'
        plannedStartDate:
          type: integer
          format: int64
        plannedEndDate:
          type: integer
          format: int64
        actualStartDate:
          type: integer
          format: int64
        actualEndDate:
          type: integer
          format: int64
        createdBy:
          type: string
        createdDate:
          type: integer
          format: int64
        address:
          $ref: '#/components/schemas/Address'
        isDeleted:
          type: boolean
        status:
          type: string
          enum:
            - ADMINISTRATION_FAILED
            - ADMINISTRATION_SUCCESS
            - BENEFICIARY_REFUSED
            - CLOSED_HOUSEHOLD
            - DELIVERED
            - NOT_ADMINISTERED
    TaskBulkRequest:
      required:
        - RequestInfo
        - Tasks
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    TaskResource:
      required:
        - isDelivered
        - productVariantId
        - quantity
        - tenantId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
        tenantId:
          type: string
        clientReferenceId:
          maxLength: 64
          minLength: 2
          type: string
        taskId:
          maxLength: 64
          minLength: 2
          type: string
        productVariantId:
          maxLength: 64
          minLength: 2
          type: string
        quantity:
          type: number
          format: double
        isDelivered:
          type: boolean
        deliveryComment:
          maxLength: 1000
          minLength: 0
          type: string
        isDeleted:
          type: boolean
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        additionalFields:
          $ref: '#/components/schemas/AdditionalFields'
    TaskRequest:
      required:
        - RequestInfo
        - Task
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        Task:
          $ref: '#/components/schemas/Task'
    TaskResponse:
      required:
        - ResponseInfo
        - Task
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        Task:
          $ref: '#/components/schemas/Task'
    TaskSearch:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        clientReferenceId:
          type: array
          items:
            type: string
        projectId:
          type: array
          items:
            type: string
        projectBeneficiaryId:
          type: array
          items:
            type: string
        projectBeneficiaryClientReferenceId:
          type: array
          items:
            type: string
        plannedStartDate:
          type: integer
          format: int64
        plannedEndDate:
          type: integer
          format: int64
        actualStartDate:
          type: integer
          format: int64
        actualEndDate:
          type: integer
          format: int64
        createdBy:
          type: string
        status:
          type: string
        boundaryCode:
          type: string
    TaskSearchRequest:
      required:
        - RequestInfo
        - Task
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        Task:
          $ref: '#/components/schemas/TaskSearch'
    TaskBulkResponse:
      required:
        - ResponseInfo
        - Tasks
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        TotalCount:
          type: integer
          format: int64
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    ProjectStaff:
      required:
        - projectId
        - tenantId
        - userId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
        tenantId:
          maxLength: 1000
          minLength: 2
          type: string
        source:
          type: string
        rowVersion:
          type: integer
          format: int32
        applicationId:
          type: string
        hasErrors:
          type: boolean
        additionalFields:
          $ref: '#/components/schemas/AdditionalFields'
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        userId:
          maxLength: 64
          minLength: 2
          type: string
        projectId:
          maxLength: 64
          minLength: 2
          type: string
        startDate:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
        channel:
          maxLength: 64
          minLength: 2
          type: string
        isDeleted:
          type: boolean
    ProjectStaffBulkRequest:
      required:
        - ProjectStaff
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectStaff:
          type: array
          items:
            $ref: '#/components/schemas/ProjectStaff'
    ProjectStaffRequest:
      required:
        - ProjectStaff
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectStaff:
          $ref: '#/components/schemas/ProjectStaff'
    ProjectStaffResponse:
      required:
        - ProjectStaff
        - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        ProjectStaff:
          $ref: '#/components/schemas/ProjectStaff'
    ProjectStaffSearch:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        staffId:
          type: array
          items:
            type: string
        projectId:
          type: array
          items:
            type: string
        startDate:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
    ProjectStaffSearchRequest:
      required:
        - ProjectStaff
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectStaff:
          $ref: '#/components/schemas/ProjectStaffSearch'
    ProjectStaffBulkResponse:
      required:
        - ProjectStaff
        - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        ProjectStaff:
          type: array
          items:
            $ref: '#/components/schemas/ProjectStaff'
        TotalCount:
          type: integer
          format: int64
    ProjectFacility:
      required:
        - facilityId
        - projectId
        - tenantId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
        tenantId:
          maxLength: 1000
          minLength: 2
          type: string
        source:
          type: string
        rowVersion:
          type: integer
          format: int32
        applicationId:
          type: string
        hasErrors:
          type: boolean
        additionalFields:
          $ref: '#/components/schemas/AdditionalFields'
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        facilityId:
          maxLength: 64
          minLength: 2
          type: string
        projectId:
          maxLength: 64
          minLength: 2
          type: string
        isDeleted:
          type: boolean
    ProjectFacilityBulkRequest:
      required:
        - ProjectFacilities
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectFacilities:
          type: array
          items:
            $ref: '#/components/schemas/ProjectFacility'
    ProjectFacilityRequest:
      required:
        - ProjectFacility
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectFacility:
          $ref: '#/components/schemas/ProjectFacility'
    ProjectFacilityResponse:
      required:
        - ProjectFacility
        - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        ProjectFacility:
          $ref: '#/components/schemas/ProjectFacility'
    ProjectFacilitySearch:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        facilityId:
          type: array
          items:
            type: string
        projectId:
          type: array
          items:
            type: string
    ProjectFacilitySearchRequest:
      required:
        - ProjectFacility
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectFacility:
          $ref: '#/components/schemas/ProjectFacilitySearch'
    ProjectFacilityBulkResponse:
      required:
        - ProjectFacilities
        - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        TotalCount:
          type: integer
          format: int64
        ProjectFacilities:
          type: array
          items:
            $ref: '#/components/schemas/ProjectFacility'
    BeneficiaryBulkRequest:
      required:
        - ProjectBeneficiaries
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectBeneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/ProjectBeneficiary'
    ProjectBeneficiary:
      required:
        - projectId
        - tenantId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
        tenantId:
          maxLength: 1000
          minLength: 2
          type: string
        source:
          type: string
        rowVersion:
          type: integer
          format: int32
        applicationId:
          type: string
        hasErrors:
          type: boolean
        additionalFields:
          $ref: '#/components/schemas/AdditionalFields'
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        clientReferenceId:
          maxLength: 64
          minLength: 2
          type: string
        clientAuditDetails:
          $ref: '#/components/schemas/AuditDetails'
        projectId:
          maxLength: 64
          minLength: 2
          type: string
        beneficiaryId:
          maxLength: 64
          minLength: 2
          type: string
        dateOfRegistration:
          minimum: 0
          type: integer
          format: int64
        beneficiaryClientReferenceId:
          maxLength: 64
          minLength: 2
          type: string
        isDeleted:
          type: boolean
        tag:
          type: string
    BeneficiaryRequest:
      required:
        - ProjectBeneficiary
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectBeneficiary:
          $ref: '#/components/schemas/ProjectBeneficiary'
    BeneficiaryResponse:
      required:
        - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        ProjectBeneficiary:
          $ref: '#/components/schemas/ProjectBeneficiary'
    BeneficiarySearchRequest:
      required:
        - RequestInfo
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        ProjectBeneficiary:
          $ref: '#/components/schemas/ProjectBeneficiarySearch'
    ProjectBeneficiarySearch:
      type: object
      properties:
        id:
          type: array
          items:
            type: string
        clientReferenceId:
          type: array
          items:
            type: string
        projectId:
          type: array
          items:
            type: string
        beneficiaryId:
          type: array
          items:
            type: string
        dateOfRegistration:
          type: integer
          format: int64
        tag:
          type: array
          items:
            type: string
    BeneficiaryBulkResponse:
      required:
        - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        TotalCount:
          type: integer
          format: int64
        ProjectBeneficiaries:
          type: array
          items:
            $ref: '#/components/schemas/ProjectBeneficiary'
