logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

invalid.input=Invalid input
spring.datasource.url= jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
id.generation.table=id_generator
id.sequence.overflow=IDSeqOverFlow
id.sequence.notfound=IDSeqNotFound
id.invalid.format=InvalidIDFormat
success=SUCCESSFUL
failed=FAILED
city.code.notfound=CityCodeNotFound

idformat.from.mdms = true
autocreate.new.seq = true
autocreate.request.seq = false

#Set context root
server.servlet.context-path=/beneficiary-idgen
server.port=8088

management.endpoints.web.base-path=/

mdms.service.host=http://localhost:8084/
mdms.service.search.uri=mdms-v2/v1/_search

id.timezone=Asia/Kolkata

#---------------------------- ID POOL -------------------------------------------#
# Max allowed batch size for default Kafka config (message size ~ 1MB) - Upper limit: 3350
id.pool.create.max.batch.size=1000

# Max allowed batch size for async create operation
id.pool.async.create.max.batch.size=50000

id.pool.seq.code=id.pool.number
idgen.random.buffer=5
limit.per.user=100
idpool.fetch.limit.from.db=100
multi.lock.wait.time=5
multi.lock.lease.time=10
id.validation.enabled=true
id.pool.padding.length=12



#------------------------------ KAFKA CONFIGURATIONS ------------------------------#
# KAFKA SERVER CONFIGURATIONS
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.producer.properties.buffer.memory=5242880
spring.kafka.producer.properties.max.request.size=5242880

# SPRING KAFKA CONSUMER CONFIGURATIONS
spring.kafka.consumer.value-deserializer=org.egov.tracer.kafka.deserializer.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# SPRING KAFKA PRODUCER CONFIGURATIONS
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# KAFKA CONSUMER CONFIG
kafka.consumer.config.auto_commit=true
kafka.consumer.config.auto_commit_interval=100
kafka.consumer.config.session_timeout=15000
kafka.consumer.config.auto_offset_reset=earliest
spring.kafka.consumer.group-id=healthIdGeneration

# KAFKA TOPIC CONFIGURATIONS
kafka.topics.save.in.id.pool=save-in-id-pool
kafka.topics.update.id.pool.status=update-id-pool-status
kafka.topics.save.in.dispatch.log=save-dispatch-id-log
kafka.topics.consumer.bulk.update.topic=id-gen-consumer-bulk-update-topic
kafka.topics.consumer.bulk.create.topic=id-gen-consumer-async-create-topic

spring.kafka.listener.missing-topics-fatal=false


# REDIS CONFIG
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.type=redis
# Seconds
spring.cache.redis.time-to-live=86400
spring.cache.autoexpiry=true
redis.ttl.in.days=1


#------------------------------ REDISSON CONFIG --------------------------------#
# Redisson connection pool config
redisson.redis.host=localhost
redisson.redis.port=6379
redisson.redis.timeout=10000
redisson.redis.connectionPoolSize=20
redisson.redis.connectionMinimumIdleSize=10
redisson.redis.threads=4
redisson.redis.nettyThreads=4


#-------------------------------- RATE LIMITER CONFIGS ------------------------- # 


# FLYWAY CONFIG
spring.flyway.url=jdbc:postgresql://localhost:5432/postgres
spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.table=health
spring.flyway.baseline-on-migrate=true
spring.flyway.outOfOrder=true
spring.flyway.locations=classpath:/db/migration/main
spring.flyway.enabled=false