logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

invalid.input=Invalid input
spring.datasource.url= jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
id.generation.table=id_generator
id.sequence.overflow=IDSeqOverFlow
id.sequence.notfound=IDSeqNotFound
id.invalid.format=InvalidIDFormat
success=SUCCESSFULL
failed=FAILED
city.code.notfound=CityCodeNotFound

idformat.from.mdms = true
autocreate.new.seq = false
autocreate.request.seq = false

#Set context root
server.context-path=/egov-idgen
server.servlet.context-path=/egov-idgen
server.port=8088

management.endpoints.web.base-path=/

mdms.service.host=http://localhost:8084/
mdms.service.search.uri=mdms-v2/v1/_search

id.timezone=IST

#---------------------------- ID POOL -------------------------------------------#
idgen.dispatch.limit-per-user=100
#id.pool.seq.code=id.pool.number
id.pool.seq.code=id.pool.number.random
idgen.random.buffer=5
limit.per.user=100
idpool.fetch.limit.from.db=1000

#------------------------------ KAFKA CONFIGURATIONS ------------------------------#
# KAFKA SERVER CONFIGURATIONS
spring.kafka.bootstrap.servers=localhost:9092
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.producer.properties.buffer.memory=5242880
spring.kafka.producer.properties.max.request.size=5242880

# SPRING KAFKA CONSUMER CONFIGURATIONS
spring.kafka.consumer.value-deserializer=org.egov.tracer.kafka.deserializer.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# SPRING KAFKA PRODUCER CONFIGURATIONS
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# KAFKA TOPIC CONFIGURATIONS
kafka.topics.save.in.id.pool=save-in-id-pool
kafka.topics.update.id.pool.status=update-id-pool-status
kafka.topics.save.in.dispatch.log=save-dispatch-id-log

spring.kafka.listener.missing-topics-fatal=false


# REDIS CONFIG
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.type=redis
# Seconds
spring.cache.redis.time-to-live=3600
spring.cache.autoexpiry=true


#------------------------------ REDISSON CONFIG --------------------------------#
# Redisson connection pool config
redisson.redis.host=localhost
redisson.redis.port=6379
redisson.redis.timeout=10000
redisson.redis.connectionPoolSize=20
redisson.redis.connectionMinimumIdleSize=10
redisson.redis.threads=4
redisson.redis.nettyThreads=4