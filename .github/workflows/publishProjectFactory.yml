name: Project Factory Service Test Builder

on:
  push:
    branches: 
      - "console"
      - "master"
    paths:
      - 'health-services/project-factory/**'
  pull_request:
    branches: 
      - "console"
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for accurate commit IDs

      # Step 2: Set up Environment Variables
      - name: Set up Environment Variables
        id: vars
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-')
          COMMIT_ID=$(git rev-parse --short HEAD)
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "COMMIT_ID=$COMMIT_ID" >> $GITHUB_ENV
          echo "ACTION_NUMBER=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      # Step 3: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build & Push the Service Docker Image
      - name: Build & Push the Service Docker Image
        id: docker_build
        working-directory: ./health-services/project-factory
        run: |
          IMAGE_TAG=egovio/project-factory:${{ env.BRANCH_NAME }}-${{ env.COMMIT_ID }}-${{ env.ACTION_NUMBER }}
          docker build . --file Dockerfile --tag $IMAGE_TAG
          docker push $IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Service Docker image built and pushed successfully"

      # Step 5: Build & Push the DB Migration Docker Image
      - name: Build & Push the DB Migration Docker Image
        id: docker_db_build
        working-directory: ./health-services/project-factory/migration
        run: |
          IMAGE_TAG=egovio/project-factory-db:${{ env.BRANCH_NAME }}-${{ env.COMMIT_ID }}-${{ env.ACTION_NUMBER }}
          docker build . --file Dockerfile --tag $IMAGE_TAG
          docker push $IMAGE_TAG
          echo "DB_IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "DB migration Docker image built and pushed successfully"

  node_build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      # Step 3: Install dependencies and build for production
      - name: Install Dependencies and Build
        working-directory: ./health-services/project-factory
        run: |
          yarn install
          yarn build
